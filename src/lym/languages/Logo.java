/* Generated By:JavaCC: Do not edit this line. Logo.java */
package lym.languages;

public class Logo implements LogoConstants {
  public static void main(String args []) throws ParseException
  {
    Logo parser = new Logo(System.in);
    while (true)
    {
      try
      {
        switch (parser.esCorrecto())
        {
          case 0 :
          System.out.println("OK.");
          break;
          case 1 :
          System.out.println("Goodbye.");
          break;
          default :
          break;
        }
      }
      catch (Exception e)
      {
        System.out.println("NOK.");
        System.out.println(e.getMessage());
       // Logo.ReInit(System.in);
      }
      catch (Error e)
      {
        System.out.println("Oops.");
        System.out.println(e.getMessage());
        break;
      }
    }
  }

  final public int esCorrecto() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case STRING:
    case CHANGESHAPETOKEN:
    case 19:
    case 20:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 57:
      programa();
    {if (true) return 0;}
      break;
    default:
      jj_la1[0] = jj_gen;
    {if (true) return 1;}
    }
    throw new Error("Missing return statement in function");
  }

  final public void number() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 10:
      jj_consume_token(10);
      jj_consume_token(SPACE);
      jj_consume_token(NUMERO);
      break;
    case NUMERO:
      jj_consume_token(NUMERO);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 11:
      case 12:
      case 13:
      case 14:
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 11:
          jj_consume_token(11);
          break;
        case 12:
          jj_consume_token(12);
          break;
        case 13:
          jj_consume_token(13);
          break;
        case 14:
          jj_consume_token(14);
          break;
        default:
          jj_la1[1] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
        number();
        break;
      default:
        jj_la1[2] = jj_gen;
        ;
      }
      break;
    case 15:
      jj_consume_token(15);
      jj_consume_token(SPACE);
      number();
      jj_consume_token(SPACE);
      number();
      break;
    case 16:
      jj_consume_token(16);
      jj_consume_token(SPACE);
      number();
      jj_consume_token(SPACE);
      number();
      break;
    case 17:
      jj_consume_token(17);
      jj_consume_token(STRING);
      break;
    default:
      jj_la1[3] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void programa() throws ParseException {
    comando();
    label_1:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 18:
        ;
        break;
      default:
        jj_la1[4] = jj_gen;
        break label_1;
      }
      jj_consume_token(18);
      comando();
    }
  }

  final public void comando() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case STRING:
    case 19:
    case 20:
    case 23:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 50:
    case 57:
      comandoMithenParametro();
      break;
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 39:
    case 40:
    case 42:
    case 43:
    case 44:
    case 47:
    case 48:
    case 49:
      comandoMonoParametroNumero();
      break;
    case 46:
      comandoMonoParametroString();
      break;
    case CHANGESHAPETOKEN:
    case 45:
      comandoMonoParametroNumeroOString();
      break;
    case 41:
      comandoBiParametroNumeroNumero();
      break;
    default:
      jj_la1[5] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void comandoMithenParametro() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 19:
      make();
      break;
    case STRING:
      toLlamado();
      break;
    case 50:
      print();
      break;
    case 23:
      repeat();
      break;
    case 32:
    case 33:
      clearScreen();
      break;
    case 34:
      penUp();
      break;
    case 35:
      penDown();
      break;
    case 36:
      hideTurtle();
      break;
    case 37:
      showTurtle();
      break;
    case 38:
      home();
      break;
    case 57:
      to();
      break;
    case 20:
      forLoop();
      break;
    default:
      jj_la1[6] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void comandoMonoParametroNumero() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 24:
    case 25:
      forward();
      break;
    case 26:
    case 27:
      back();
      break;
    case 28:
    case 29:
      right();
      break;
    case 30:
    case 31:
      left();
      break;
    case 39:
      setX();
      break;
    case 40:
      setY();
      break;
    case 44:
      arc();
      break;
    case 49:
      setColor();
      break;
    case 48:
      setWidth();
      break;
    case 47:
      setLabelHeight();
      break;
    case 42:
    case 43:
      setHeading();
      break;
    default:
      jj_la1[7] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void comandoMonoParametroString() throws ParseException {
    label();
  }

  final public void comandoMonoParametroNumeroOString() throws ParseException {
    changeShape();
  }

  final public void comandoBiParametroNumeroNumero() throws ParseException {
    setXY();
  }

  final public void make() throws ParseException {
    jj_consume_token(19);
    jj_consume_token(SPACE);
    jj_consume_token(TEXTO);
    jj_consume_token(SPACE);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case TEXTO:
      jj_consume_token(TEXTO);
      break;
    case NUMERO:
    case 10:
    case 15:
    case 16:
    case 17:
      number();
      break;
    default:
      jj_la1[8] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void toLlamado() throws ParseException {
    jj_consume_token(STRING);
    label_2:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SPACE:
        ;
        break;
      default:
        jj_la1[9] = jj_gen;
        break label_2;
      }
      jj_consume_token(SPACE);
      number();
    }
  }

  final public void forLoop() throws ParseException {
    jj_consume_token(20);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SPACE:
      jj_consume_token(SPACE);
      break;
    default:
      jj_la1[10] = jj_gen;
      ;
    }
    jj_consume_token(21);
    jj_consume_token(STRING);
    jj_consume_token(SPACE);
    number();
    jj_consume_token(SPACE);
    number();
    jj_consume_token(SPACE);
    number();
    jj_consume_token(22);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SPACE:
      jj_consume_token(SPACE);
      break;
    default:
      jj_la1[11] = jj_gen;
      ;
    }
    jj_consume_token(21);
    programa();
    jj_consume_token(22);
  }

  final public void operacion() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case NUMERO:
    case 10:
    case 15:
    case 16:
    case 17:
      sum();
      break;
      difference();
      break;
      multiplicacion();
      break;
      division();
      break;
    default:
      jj_la1[12] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void sum() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 15:
      jj_consume_token(15);
      jj_consume_token(SPACE);
      number();
      jj_consume_token(SPACE);
      number();
      break;
    case NUMERO:
    case 10:
    case 16:
    case 17:
      number();
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SPACE:
        jj_consume_token(SPACE);
        break;
      default:
        jj_la1[13] = jj_gen;
        ;
      }
      jj_consume_token(11);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SPACE:
        jj_consume_token(SPACE);
        break;
      default:
        jj_la1[14] = jj_gen;
        ;
      }
      number();
      break;
    default:
      jj_la1[15] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void difference() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 16:
      jj_consume_token(16);
      jj_consume_token(SPACE);
      number();
      jj_consume_token(SPACE);
      number();
      break;
    case NUMERO:
    case 10:
    case 15:
    case 17:
      number();
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SPACE:
        jj_consume_token(SPACE);
        break;
      default:
        jj_la1[16] = jj_gen;
        ;
      }
      jj_consume_token(12);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SPACE:
        jj_consume_token(SPACE);
        break;
      default:
        jj_la1[17] = jj_gen;
        ;
      }
      number();
      break;
    default:
      jj_la1[18] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void multiplicacion() throws ParseException {
    number();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SPACE:
      jj_consume_token(SPACE);
      break;
    default:
      jj_la1[19] = jj_gen;
      ;
    }
    jj_consume_token(13);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SPACE:
      jj_consume_token(SPACE);
      break;
    default:
      jj_la1[20] = jj_gen;
      ;
    }
    number();
  }

  final public void division() throws ParseException {
    number();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SPACE:
      jj_consume_token(SPACE);
      break;
    default:
      jj_la1[21] = jj_gen;
      ;
    }
    jj_consume_token(14);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SPACE:
      jj_consume_token(SPACE);
      break;
    default:
      jj_la1[22] = jj_gen;
      ;
    }
    number();
  }

  final public void repeat() throws ParseException {
    jj_consume_token(23);
    jj_consume_token(SPACE);
    number();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SPACE:
      jj_consume_token(SPACE);
      break;
    default:
      jj_la1[23] = jj_gen;
      ;
    }
    jj_consume_token(21);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SPACE:
      jj_consume_token(SPACE);
      break;
    default:
      jj_la1[24] = jj_gen;
      ;
    }
    programa();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SPACE:
      jj_consume_token(SPACE);
      break;
    default:
      jj_la1[25] = jj_gen;
      ;
    }
    jj_consume_token(22);
  }

  final public void forward() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 24:
      jj_consume_token(24);
      break;
    case 25:
      jj_consume_token(25);
      break;
    default:
      jj_la1[26] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(SPACE);
    number();
  }

  final public void back() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 26:
      jj_consume_token(26);
      break;
    case 27:
      jj_consume_token(27);
      break;
    default:
      jj_la1[27] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(SPACE);
    number();
  }

  final public void right() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 28:
      jj_consume_token(28);
      break;
    case 29:
      jj_consume_token(29);
      break;
    default:
      jj_la1[28] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(SPACE);
    number();
  }

  final public void left() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 30:
      jj_consume_token(30);
      break;
    case 31:
      jj_consume_token(31);
      break;
    default:
      jj_la1[29] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(SPACE);
    number();
  }

  final public void clearScreen() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 32:
      jj_consume_token(32);
      break;
    case 33:
      jj_consume_token(33);
      break;
    default:
      jj_la1[30] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void penUp() throws ParseException {
    jj_consume_token(34);
  }

  final public void penDown() throws ParseException {
    jj_consume_token(35);
  }

  final public void hideTurtle() throws ParseException {
    jj_consume_token(36);
  }

  final public void showTurtle() throws ParseException {
    jj_consume_token(37);
  }

  final public void home() throws ParseException {
    jj_consume_token(38);
  }

  final public void setX() throws ParseException {
    jj_consume_token(39);
    jj_consume_token(SPACE);
    number();
  }

  final public void setY() throws ParseException {
    jj_consume_token(40);
    jj_consume_token(SPACE);
    number();
  }

  final public void setXY() throws ParseException {
    jj_consume_token(41);
    jj_consume_token(SPACE);
    number();
    jj_consume_token(SPACE);
    number();
  }

  final public void setHeading() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 42:
      jj_consume_token(42);
      break;
    case 43:
      jj_consume_token(43);
      break;
    default:
      jj_la1[31] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(SPACE);
    number();
  }

  final public void arc() throws ParseException {
    jj_consume_token(44);
    jj_consume_token(SPACE);
    number();
  }

  final public void changeShape() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case CHANGESHAPETOKEN:
      jj_consume_token(CHANGESHAPETOKEN);
      break;
    case 45:
      jj_consume_token(45);
      break;
    default:
      jj_la1[32] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(SPACE);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case TEXTO:
      jj_consume_token(TEXTO);
      break;
    case NUMERO:
    case 10:
    case 15:
    case 16:
    case 17:
      number();
      break;
    default:
      jj_la1[33] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void label() throws ParseException {
    jj_consume_token(46);
    jj_consume_token(SPACE);
    jj_consume_token(TEXTO);
  }

  final public void setLabelHeight() throws ParseException {
    jj_consume_token(47);
    jj_consume_token(SPACE);
    number();
  }

  final public void setWidth() throws ParseException {
    jj_consume_token(48);
    jj_consume_token(SPACE);
    number();
  }

  final public void setColor() throws ParseException {
    jj_consume_token(49);
    jj_consume_token(SPACE);
    number();
  }

  final public void print() throws ParseException {
    jj_consume_token(50);
    jj_consume_token(SPACE);
    printArgumentos();
  }

  final public void printArgumentos() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 51:
      pos();
      break;
    case 52:
      xCor();
      break;
    case 53:
      yCor();
      break;
    case 54:
      heading();
      break;
    case STRING:
      jj_consume_token(STRING);
      break;
    case NUMERO:
    case 10:
    case 15:
    case 16:
    case 17:
      number();
      break;
    case 55:
      towards();
      break;
    default:
      jj_la1[34] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void pos() throws ParseException {
    jj_consume_token(51);
  }

  final public void xCor() throws ParseException {
    jj_consume_token(52);
  }

  final public void yCor() throws ParseException {
    jj_consume_token(53);
  }

  final public void heading() throws ParseException {
    jj_consume_token(54);
  }

  final public void towards() throws ParseException {
    jj_consume_token(55);
    jj_consume_token(SPACE);
    jj_consume_token(56);
    jj_consume_token(SPACE);
    number();
    jj_consume_token(SPACE);
    number();
  }

  final public void to() throws ParseException {
    jj_consume_token(57);
    jj_consume_token(SPACE);
    jj_consume_token(58);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SPACE:
      jj_consume_token(SPACE);
      break;
    default:
      jj_la1[35] = jj_gen;
      ;
    }
    label_3:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SPACE:
        ;
        break;
      default:
        jj_la1[36] = jj_gen;
        break label_3;
      }
      jj_consume_token(SPACE);
      jj_consume_token(59);
      jj_consume_token(STRING);
    }
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SPACE:
      jj_consume_token(SPACE);
      break;
    default:
      jj_la1[37] = jj_gen;
      ;
    }
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 60:
      jj_consume_token(60);
      jj_consume_token(SPACE);
      number();
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SPACE:
        jj_consume_token(SPACE);
        break;
      default:
        jj_la1[38] = jj_gen;
        ;
      }
      jj_consume_token(OPERADORBOOLEANO);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SPACE:
        jj_consume_token(SPACE);
        break;
      default:
        jj_la1[39] = jj_gen;
        ;
      }
      number();
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SPACE:
        jj_consume_token(SPACE);
        break;
      default:
        jj_la1[40] = jj_gen;
        ;
      }
      jj_consume_token(61);
      break;
    default:
      jj_la1[41] = jj_gen;
      ;
    }
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SPACE:
      jj_consume_token(SPACE);
      break;
    default:
      jj_la1[42] = jj_gen;
      ;
    }
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case STRING:
    case CHANGESHAPETOKEN:
    case 19:
    case 20:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 57:
      programa();
      break;
    default:
      jj_la1[43] = jj_gen;
      ;
    }
  }

  /** Generated Token Manager. */
  public LogoTokenManager token_source;
  SimpleCharStream jj_input_stream;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private int jj_gen;
  final private int[] jj_la1 = new int[44];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static {
      jj_la1_init_0();
      jj_la1_init_1();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new int[] {0xff980208,0x7800,0x7800,0x38420,0x40000,0xff980208,0x980008,0xff000000,0x38520,0x40,0x40,0x40,0x38420,0x40,0x40,0x38420,0x40,0x40,0x38420,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x3000000,0xc000000,0x30000000,0xc0000000,0x0,0x0,0x200,0x38520,0x38428,0x40,0x40,0x40,0x40,0x40,0x40,0x0,0x40,0xff980208,};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new int[] {0x207ffff,0x0,0x0,0x0,0x0,0x207ffff,0x204007f,0x39d80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3,0xc00,0x2000,0x0,0xf80000,0x0,0x0,0x0,0x0,0x0,0x0,0x10000000,0x0,0x207ffff,};
   }

  /** Constructor with InputStream. */
  public Logo(java.io.InputStream stream) {
     this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public Logo(java.io.InputStream stream, String encoding) {
    try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source = new LogoTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 44; i++) jj_la1[i] = -1;
  }

  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream) {
     ReInit(stream, null);
  }
  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream, String encoding) {
    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 44; i++) jj_la1[i] = -1;
  }

  /** Constructor. */
  public Logo(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new LogoTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 44; i++) jj_la1[i] = -1;
  }

  /** Reinitialise. */
  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 44; i++) jj_la1[i] = -1;
  }

  /** Constructor with generated Token Manager. */
  public Logo(LogoTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 44; i++) jj_la1[i] = -1;
  }

  /** Reinitialise. */
  public void ReInit(LogoTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 44; i++) jj_la1[i] = -1;
  }

  private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }


/** Get the next Token. */
  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  private int jj_ntk() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;

  /** Generate ParseException. */
  public ParseException generateParseException() {
    jj_expentries.clear();
    boolean[] la1tokens = new boolean[62];
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 44; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 62; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.add(jj_expentry);
      }
    }
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = jj_expentries.get(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

}
